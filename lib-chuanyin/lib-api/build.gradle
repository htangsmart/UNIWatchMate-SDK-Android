plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdkVersion compile_sdk_version

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    namespace 'com.base.api'
}
afterEvaluate {
    // for app test, copy the final aar to application libs
    android.libraryVariants.all { variant ->
        File outputFile = variant.outputs.first().outputFile
        tasks.named("assemble${variant.name.capitalize()}").configure {
            doLast {
                copy {
                    from outputFile
                    into "../../app-Sample/libs"
                    rename outputFile.name, "lib-api.aar"
                }
            }
        }
        if (variant.getBuildType().isMinifyEnabled()) {
            def path = "${projectDir}/mappings"
            if (!isReleaseBuildType()) {
                path = "debugMapping/"
            } else {
                path = "releaseMapping/"
            }
            //考本mapping 到目的目录
            variant.assemble.doLast {
                copy {
                    from variant.mappingFile
                    into path
                    rename { String fileName ->
                        "mapping_lib-api_${buildTime()}.txt"
                    }
                }
            }
        }
    }
}
dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':lib-chuanyin:lib-interface')

    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "io.reactivex.rxjava3:rxjava:$rx_java_version"
    implementation "io.reactivex.rxjava3:rxandroid:$rx_android_version"
}

repositories {
    mavenCentral()
}