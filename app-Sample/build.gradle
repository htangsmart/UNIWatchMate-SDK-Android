plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    namespace 'com.sjbt.sdk.sample'
    compileSdk compile_sdk_version

    signingConfigs {
        //release版本使用的签名
//        密码:uniwatchpwd
//alias:uniwatchdemo
//
//Name:UniWatch
//Unit:XianShenJu
//Organization:XianShenJu
//City:XiAn
//Province:ShanXi
//Country Cide:86
        release {
            storeFile file("uniwatchmate.jks")
            storePassword "uniwatchpwd"
            keyAlias "uniwatchdemo"
            keyPassword "uniwatchpwd"

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    outputFileName = "uniwatch_sample_" + buildType.name + "_${variant.versionName}_${buildTime()}.apk"
                }
            }
        }

        debug {
            storeFile file("uniwatchmate.jks")
            storePassword "uniwatchpwd"
            keyAlias "uniwatchdemo"
            keyPassword "uniwatchpwd"

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    outputFileName = "uniwatch_sample_" + buildType.name + "_${variant.versionName}_${buildTime()}.apk"
                }
            }
        }
    }

    defaultConfig {
        applicationId "com.sjbt.sdk.sample"
        minSdk min_sdk_version
        targetSdk target_sdk_version
        versionCode 20
        versionName "1.0.20"
        signingConfig signingConfigs.release

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    dexOptions {
        //最大堆内存
        javaMaxHeapSize '2048m'
        //预编译
        preDexLibraries = true
        //线程数
        threadCount = 16
        dexInProcess = true
    }
    buildFeatures {
        viewBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}
repositories {
    flatDir {
        dirs 'libs', '/libs'
    }
}
//当前时间
def static buildTime() {
    def date = new Date()
    return date.format("yyyMMddHHmm")
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', 'lib_*.aar'])


    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation 'com.guolindev.permissionx:permissionx:1.6.4'
    if (use_chuanyin_aar.equalsIgnoreCase("true")) {
        implementation(name: 'lib-interface', ext: 'aar')
        implementation(name: 'lib-sj-sdk', ext: 'aar')
        implementation(name: 'lib-api', ext: 'aar')
    } else {
        implementation project(path: ':lib-chuanyin:lib-interface')
        implementation project(path: ':lib-chuanyin:lib-sj-sdk')
        implementation project(path: ':lib-chuanyin:lib-api')
    }
    implementation project(path: ':zbarlibrary')
    implementation project(path: ':file-chooser-lib')

    //Required
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "io.reactivex.rxjava3:rxjava:$rx_java_version"
    implementation "io.reactivex.rxjava3:rxandroid:$rx_android_version"
    implementation "com.polidea.rxandroidble3:rxandroidble:1.17.2"

//Base
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "com.google.code.gson:gson:$gson_version"

    //JetPack-Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    //JetPack-ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.activity:activity-ktx:1.6.0"
    implementation "androidx.fragment:fragment-ktx:1.5.4"

    //JetPack-SplashScreen
    implementation "androidx.core:core-splashscreen:$splash_screen_version"

    //JetPack-Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    //JetPack-Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //JetPack-DataStore
    implementation "androidx.datastore:datastore:$datastore_version"
    implementation "androidx.datastore:datastore-preferences:$datastore_version"

    //JetPack-WorkManager
    implementation 'androidx.work:work-runtime-ktx:2.7.1'

    //permission
    implementation "com.guolindev.permissionx:permissionx:$permissionx_version"

    //retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'

    //JetPack-CameraX
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:$camerax_version"
    implementation "androidx.camera:camera-extensions:$camerax_version"
    implementation 'androidx.window:window:1.0.0'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx3:$kotlin_coroutines_version"

    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'com.github.kilnn:wheelview:1.0.2'

    //glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.50'
//    implementation "io.github.cymchad:BaseRecyclerViewAdapterHelper:4.0.1"

    //带数字的进度条
    implementation 'com.akexorcist:round-corner-progress-bar:2.1.2'

    //代替shape简单实现圆角背景
    implementation 'com.github.JavaNoober.BackgroundLibrary:library:1.7.2'
    //代替selector简单实现selector注入
    implementation 'com.github.tianzhijiexian:SelectorInjection:1.1.6'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}